/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cyberbotics.webots.controller;

public class Receiver extends Device {
  private transient long swigCPtr;

  protected Receiver(long cPtr, boolean cMemoryOwn) {
    super(wrapperJNI.Receiver_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Receiver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        wrapperJNI.delete_Receiver(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Receiver(String name) {
    this(wrapperJNI.new_Receiver(name), true);
  }

  public void enable(int samplingPeriod) {
    wrapperJNI.Receiver_enable(swigCPtr, this, samplingPeriod);
  }

  public void disable() {
    wrapperJNI.Receiver_disable(swigCPtr, this);
  }

  public int getSamplingPeriod() {
    return wrapperJNI.Receiver_getSamplingPeriod(swigCPtr, this);
  }

  public void setChannel(int channel) {
    wrapperJNI.Receiver_setChannel(swigCPtr, this, channel);
  }

  public int getChannel() {
    return wrapperJNI.Receiver_getChannel(swigCPtr, this);
  }

  public int getQueueLength() {
    return wrapperJNI.Receiver_getQueueLength(swigCPtr, this);
  }

  public void nextPacket() {
    wrapperJNI.Receiver_nextPacket(swigCPtr, this);
  }

  public int getDataSize() {
    return wrapperJNI.Receiver_getDataSize(swigCPtr, this);
  }

  public byte[] getData() {
  return wrapperJNI.Receiver_getData(swigCPtr, this);
}

  public double getSignalStrength() {
    return wrapperJNI.Receiver_getSignalStrength(swigCPtr, this);
  }

  public double[] getEmitterDirection() {
    return wrapperJNI.Receiver_getEmitterDirection(swigCPtr, this);
  }

  public final static int CHANNEL_BROADCAST = -1;

}
