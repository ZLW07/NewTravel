/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cyberbotics.webots.controller;

public class Speaker extends Device {
  private transient long swigCPtr;

  protected Speaker(long cPtr, boolean cMemoryOwn) {
    super(wrapperJNI.Speaker_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Speaker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        wrapperJNI.delete_Speaker(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Speaker(String name) {
    this(wrapperJNI.new_Speaker(name), true);
  }

  public static void playSound(Speaker left, Speaker right, String sound, double volume, double pitch, double balance, boolean loop) {
    wrapperJNI.Speaker_playSound(Speaker.getCPtr(left), left, Speaker.getCPtr(right), right, sound, volume, pitch, balance, loop);
  }

  public boolean isSoundPlaying(String sound) {
    return wrapperJNI.Speaker_isSoundPlaying(swigCPtr, this, sound);
  }

  public void stop(String sound) {
    wrapperJNI.Speaker_stop(swigCPtr, this, sound);
  }

  public boolean setEngine(String engine) {
    return wrapperJNI.Speaker_setEngine(swigCPtr, this, engine);
  }

  public boolean setLanguage(String language) {
    return wrapperJNI.Speaker_setLanguage(swigCPtr, this, language);
  }

  public String getEngine() {
    return wrapperJNI.Speaker_getEngine(swigCPtr, this);
  }

  public String getLanguage() {
    return wrapperJNI.Speaker_getLanguage(swigCPtr, this);
  }

  public void speak(String text, double volume) {
    wrapperJNI.Speaker_speak(swigCPtr, this, text, volume);
  }

  public boolean isSpeaking() {
    return wrapperJNI.Speaker_isSpeaking(swigCPtr, this);
  }

}
