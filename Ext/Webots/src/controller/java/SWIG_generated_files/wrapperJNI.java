/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.cyberbotics.webots.controller;

public class wrapperJNI {

  static {
    try {
      System.loadLibrary("JavaController");
    } catch (UnsatisfiedLinkError e) {
      System.err.println("Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.\n" + e);
      System.exit(1);
    }
  }

  public final static native long new_AnsiCodes();
  public final static native void delete_AnsiCodes(long jarg1);
  public final static native void delete_Device(long jarg1);
  public final static native String Device_getName(long jarg1, Device jarg1_);
  public final static native String Device_getModel(long jarg1, Device jarg1_);
  public final static native int Device_getNodeType(long jarg1, Device jarg1_);
  public final static native int Device_getTag(long jarg1, Device jarg1_);
  public final static native boolean Device_hasType(int jarg1, int jarg2);
  public final static native long new_Accelerometer(String jarg1);
  public final static native void delete_Accelerometer(long jarg1);
  public final static native void Accelerometer_enable(long jarg1, Accelerometer jarg1_, int jarg2);
  public final static native void Accelerometer_disable(long jarg1, Accelerometer jarg1_);
  public final static native int Accelerometer_getSamplingPeriod(long jarg1, Accelerometer jarg1_);
  public final static native double[] Accelerometer_getValues(long jarg1, Accelerometer jarg1_);
  public final static native int Accelerometer_getLookupTableSize(long jarg1, Accelerometer jarg1_);
  public final static native double[] Accelerometer_getLookupTable(long jarg1, Accelerometer jarg1_);
  public final static native long new_Altimeter(String jarg1);
  public final static native void delete_Altimeter(long jarg1);
  public final static native void Altimeter_enable(long jarg1, Altimeter jarg1_, int jarg2);
  public final static native void Altimeter_disable(long jarg1, Altimeter jarg1_);
  public final static native int Altimeter_getSamplingPeriod(long jarg1, Altimeter jarg1_);
  public final static native double Altimeter_getValue(long jarg1, Altimeter jarg1_);
  public final static native long new_Brake(String jarg1);
  public final static native void delete_Brake(long jarg1);
  public final static native int Brake_getType(long jarg1, Brake jarg1_);
  public final static native void Brake_setDampingConstant(long jarg1, Brake jarg1_, double jarg2);
  public final static native long Brake_getMotorPrivate(long jarg1, Brake jarg1_);
  public final static native long Brake_getPositionSensorPrivate(long jarg1, Brake jarg1_);
  public final static native int Brake_getMotorTag(long jarg1, Brake jarg1_);
  public final static native int Brake_getPositionSensorTag(long jarg1, Brake jarg1_);
  public final static native void CameraRecognitionObject_id_set(long jarg1, CameraRecognitionObject jarg1_, int jarg2);
  public final static native int CameraRecognitionObject_id_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_position_set(long jarg1, CameraRecognitionObject jarg1_, double[] jarg2);
  public final static native double[] CameraRecognitionObject_position_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_orientation_set(long jarg1, CameraRecognitionObject jarg1_, double[] jarg2);
  public final static native double[] CameraRecognitionObject_orientation_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_size_set(long jarg1, CameraRecognitionObject jarg1_, double[] jarg2);
  public final static native double[] CameraRecognitionObject_size_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_position_on_image_set(long jarg1, CameraRecognitionObject jarg1_, int[] jarg2);
  public final static native int[] CameraRecognitionObject_position_on_image_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_size_on_image_set(long jarg1, CameraRecognitionObject jarg1_, int[] jarg2);
  public final static native int[] CameraRecognitionObject_size_on_image_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_number_of_colors_set(long jarg1, CameraRecognitionObject jarg1_, int jarg2);
  public final static native int CameraRecognitionObject_number_of_colors_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_colors_set(long jarg1, CameraRecognitionObject jarg1_, double[] jarg2);
  public final static native double[] CameraRecognitionObject_colors_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native void CameraRecognitionObject_model_set(long jarg1, CameraRecognitionObject jarg1_, String jarg2);
  public final static native String CameraRecognitionObject_model_get(long jarg1, CameraRecognitionObject jarg1_);
  public final static native int[] CameraRecognitionObject_getPositionOnImage(long jarg1, CameraRecognitionObject jarg1_);
  public final static native int[] CameraRecognitionObject_getSizeOnImage(long jarg1, CameraRecognitionObject jarg1_);
  public final static native int CameraRecognitionObject_getNumberOfColors(long jarg1, CameraRecognitionObject jarg1_);
  public final static native long new_CameraRecognitionObject();
  public final static native void delete_CameraRecognitionObject(long jarg1);
  public final static native long new_Camera(String jarg1);
  public final static native void delete_Camera(long jarg1);
  public final static native void Camera_enable(long jarg1, Camera jarg1_, int jarg2);
  public final static native void Camera_disable(long jarg1, Camera jarg1_);
  public final static native int Camera_getSamplingPeriod(long jarg1, Camera jarg1_);
  public final static native int[] Camera_getImage(long jarg1, Camera jarg1_);
  public final static native int Camera_getWidth(long jarg1, Camera jarg1_);
  public final static native int Camera_getHeight(long jarg1, Camera jarg1_);
  public final static native double Camera_getFov(long jarg1, Camera jarg1_);
  public final static native double Camera_getMaxFov(long jarg1, Camera jarg1_);
  public final static native double Camera_getMinFov(long jarg1, Camera jarg1_);
  public final static native void Camera_setFov(long jarg1, Camera jarg1_, double jarg2);
  public final static native double Camera_getExposure(long jarg1, Camera jarg1_);
  public final static native void Camera_setExposure(long jarg1, Camera jarg1_, double jarg2);
  public final static native double Camera_getFocalLength(long jarg1, Camera jarg1_);
  public final static native double Camera_getFocalDistance(long jarg1, Camera jarg1_);
  public final static native double Camera_getMaxFocalDistance(long jarg1, Camera jarg1_);
  public final static native double Camera_getMinFocalDistance(long jarg1, Camera jarg1_);
  public final static native void Camera_setFocalDistance(long jarg1, Camera jarg1_, double jarg2);
  public final static native double Camera_getNear(long jarg1, Camera jarg1_);
  public final static native int Camera_saveImage(long jarg1, Camera jarg1_, String jarg2, int jarg3);
  public final static native boolean Camera_hasRecognition(long jarg1, Camera jarg1_);
  public final static native void Camera_recognitionEnable(long jarg1, Camera jarg1_, int jarg2);
  public final static native void Camera_recognitionDisable(long jarg1, Camera jarg1_);
  public final static native int Camera_getRecognitionSamplingPeriod(long jarg1, Camera jarg1_);
  public final static native int Camera_getRecognitionNumberOfObjects(long jarg1, Camera jarg1_);
  public final static native long Camera_getRecognitionObjectsPrivate(long jarg1, Camera jarg1_);
  public final static native boolean Camera_hasRecognitionSegmentation(long jarg1, Camera jarg1_);
  public final static native void Camera_enableRecognitionSegmentation(long jarg1, Camera jarg1_);
  public final static native void Camera_disableRecognitionSegmentation(long jarg1, Camera jarg1_);
  public final static native boolean Camera_isRecognitionSegmentationEnabled(long jarg1, Camera jarg1_);
  public final static native int[] Camera_getRecognitionSegmentationImage(long jarg1, Camera jarg1_);
  public final static native int Camera_saveRecognitionSegmentationImage(long jarg1, Camera jarg1_, String jarg2, int jarg3);
  public final static native long Camera_getRecognitionObject(long jarg1, Camera jarg1_, int jarg2);
  public final static native long new_Compass(String jarg1);
  public final static native void delete_Compass(long jarg1);
  public final static native void Compass_enable(long jarg1, Compass jarg1_, int jarg2);
  public final static native void Compass_disable(long jarg1, Compass jarg1_);
  public final static native int Compass_getSamplingPeriod(long jarg1, Compass jarg1_);
  public final static native double[] Compass_getValues(long jarg1, Compass jarg1_);
  public final static native int Compass_getLookupTableSize(long jarg1, Compass jarg1_);
  public final static native double[] Compass_getLookupTable(long jarg1, Compass jarg1_);
  public final static native long new_Connector(String jarg1);
  public final static native void delete_Connector(long jarg1);
  public final static native void Connector_enablePresence(long jarg1, Connector jarg1_, int jarg2);
  public final static native void Connector_disablePresence(long jarg1, Connector jarg1_);
  public final static native int Connector_getPresenceSamplingPeriod(long jarg1, Connector jarg1_);
  public final static native int Connector_getPresence(long jarg1, Connector jarg1_);
  public final static native boolean Connector_isLocked(long jarg1, Connector jarg1_);
  public final static native void Connector_lock(long jarg1, Connector jarg1_);
  public final static native void Connector_unlock(long jarg1, Connector jarg1_);
  public final static native long new_ImageRef(long jarg1);
  public final static native void delete_ImageRef(long jarg1);
  public final static native long new_Display(String jarg1);
  public final static native void delete_Display(long jarg1);
  public final static native int Display_getWidth(long jarg1, Display jarg1_);
  public final static native int Display_getHeight(long jarg1, Display jarg1_);
  public final static native void Display_setColor(long jarg1, Display jarg1_, int jarg2);
  public final static native void Display_setAlpha(long jarg1, Display jarg1_, double jarg2);
  public final static native void Display_setOpacity(long jarg1, Display jarg1_, double jarg2);
  public final static native void Display_setFont(long jarg1, Display jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native void Display_attachCamera(long jarg1, Display jarg1_, long jarg2, Camera jarg2_);
  public final static native void Display_detachCamera(long jarg1, Display jarg1_);
  public final static native void Display_drawPixel(long jarg1, Display jarg1_, int jarg2, int jarg3);
  public final static native void Display_drawLine(long jarg1, Display jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Display_drawRectangle(long jarg1, Display jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Display_drawOval(long jarg1, Display jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Display_drawPolygon(long jarg1, Display jarg1_, int[] jarg2, int[] jarg3, int jarg4);
  public final static native void Display_drawText(long jarg1, Display jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void Display_fillRectangle(long jarg1, Display jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Display_fillOval(long jarg1, Display jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Display_fillPolygon(long jarg1, Display jarg1_, int[] jarg2, int[] jarg3, int jarg4);
  public final static native long Display_imageNew(long jarg1, Display jarg1_, int jarg2, int jarg3, int[] jarg4, int jarg5);
  public final static native long Display_imageCopy(long jarg1, Display jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void Display_imagePaste__SWIG_0(long jarg1, Display jarg1_, long jarg2, ImageRef jarg2_, int jarg3, int jarg4, boolean jarg5);
  public final static native void Display_imagePaste__SWIG_1(long jarg1, Display jarg1_, long jarg2, ImageRef jarg2_, int jarg3, int jarg4);
  public final static native long Display_imageLoad(long jarg1, Display jarg1_, String jarg2);
  public final static native void Display_imageSave(long jarg1, Display jarg1_, long jarg2, ImageRef jarg2_, String jarg3);
  public final static native void Display_imageDelete(long jarg1, Display jarg1_, long jarg2, ImageRef jarg2_);
  public final static native long new_DistanceSensor(String jarg1);
  public final static native void delete_DistanceSensor(long jarg1);
  public final static native void DistanceSensor_enable(long jarg1, DistanceSensor jarg1_, int jarg2);
  public final static native void DistanceSensor_disable(long jarg1, DistanceSensor jarg1_);
  public final static native int DistanceSensor_getSamplingPeriod(long jarg1, DistanceSensor jarg1_);
  public final static native double DistanceSensor_getValue(long jarg1, DistanceSensor jarg1_);
  public final static native double DistanceSensor_getMaxValue(long jarg1, DistanceSensor jarg1_);
  public final static native double DistanceSensor_getMinValue(long jarg1, DistanceSensor jarg1_);
  public final static native double DistanceSensor_getAperture(long jarg1, DistanceSensor jarg1_);
  public final static native int DistanceSensor_getLookupTableSize(long jarg1, DistanceSensor jarg1_);
  public final static native double[] DistanceSensor_getLookupTable(long jarg1, DistanceSensor jarg1_);
  public final static native int DistanceSensor_getType(long jarg1, DistanceSensor jarg1_);
  public final static native long new_Emitter(String jarg1);
  public final static native void delete_Emitter(long jarg1);
  public final static native int Emitter_send(long jarg1, Emitter jarg1_, byte[] jarg2, int jarg3);
  public final static native int Emitter_getBufferSize(long jarg1, Emitter jarg1_);
  public final static native void Emitter_setChannel(long jarg1, Emitter jarg1_, int jarg2);
  public final static native int Emitter_getChannel(long jarg1, Emitter jarg1_);
  public final static native double Emitter_getRange(long jarg1, Emitter jarg1_);
  public final static native void Emitter_setRange(long jarg1, Emitter jarg1_, double jarg2);
  public final static native String Field_getName(long jarg1, Field jarg1_);
  public final static native int Field_getType(long jarg1, Field jarg1_);
  public final static native String Field_getTypeName(long jarg1, Field jarg1_);
  public final static native int Field_getCount(long jarg1, Field jarg1_);
  public final static native void Field_enableSFTracking(long jarg1, Field jarg1_, int jarg2);
  public final static native void Field_disableSFTracking(long jarg1, Field jarg1_);
  public final static native boolean Field_getSFBool(long jarg1, Field jarg1_);
  public final static native int Field_getSFInt32(long jarg1, Field jarg1_);
  public final static native double Field_getSFFloat(long jarg1, Field jarg1_);
  public final static native double[] Field_getSFVec2f(long jarg1, Field jarg1_);
  public final static native double[] Field_getSFVec3f(long jarg1, Field jarg1_);
  public final static native double[] Field_getSFRotation(long jarg1, Field jarg1_);
  public final static native double[] Field_getSFColor(long jarg1, Field jarg1_);
  public final static native String Field_getSFString(long jarg1, Field jarg1_);
  public final static native long Field_getSFNodePrivate(long jarg1, Field jarg1_);
  public final static native boolean Field_getMFBool(long jarg1, Field jarg1_, int jarg2);
  public final static native int Field_getMFInt32(long jarg1, Field jarg1_, int jarg2);
  public final static native double Field_getMFFloat(long jarg1, Field jarg1_, int jarg2);
  public final static native double[] Field_getMFVec2f(long jarg1, Field jarg1_, int jarg2);
  public final static native double[] Field_getMFVec3f(long jarg1, Field jarg1_, int jarg2);
  public final static native double[] Field_getMFRotation(long jarg1, Field jarg1_, int jarg2);
  public final static native double[] Field_getMFColor(long jarg1, Field jarg1_, int jarg2);
  public final static native String Field_getMFString(long jarg1, Field jarg1_, int jarg2);
  public final static native long Field_getMFNodePrivate(long jarg1, Field jarg1_, int jarg2);
  public final static native void Field_setSFBool(long jarg1, Field jarg1_, boolean jarg2);
  public final static native void Field_setSFInt32(long jarg1, Field jarg1_, int jarg2);
  public final static native void Field_setSFFloat(long jarg1, Field jarg1_, double jarg2);
  public final static native void Field_setSFVec2f(long jarg1, Field jarg1_, double[] jarg2);
  public final static native void Field_setSFVec3f(long jarg1, Field jarg1_, double[] jarg2);
  public final static native void Field_setSFRotation(long jarg1, Field jarg1_, double[] jarg2);
  public final static native void Field_setSFColor(long jarg1, Field jarg1_, double[] jarg2);
  public final static native void Field_setSFString(long jarg1, Field jarg1_, String jarg2);
  public final static native void Field_setMFBool(long jarg1, Field jarg1_, int jarg2, boolean jarg3);
  public final static native void Field_setMFInt32(long jarg1, Field jarg1_, int jarg2, int jarg3);
  public final static native void Field_setMFFloat(long jarg1, Field jarg1_, int jarg2, double jarg3);
  public final static native void Field_setMFVec2f(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_setMFVec3f(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_setMFRotation(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_setMFColor(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_setMFString(long jarg1, Field jarg1_, int jarg2, String jarg3);
  public final static native void Field_insertMFBool(long jarg1, Field jarg1_, int jarg2, boolean jarg3);
  public final static native void Field_insertMFInt32(long jarg1, Field jarg1_, int jarg2, int jarg3);
  public final static native void Field_insertMFFloat(long jarg1, Field jarg1_, int jarg2, double jarg3);
  public final static native void Field_insertMFVec2f(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_insertMFVec3f(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_insertMFRotation(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_insertMFColor(long jarg1, Field jarg1_, int jarg2, double[] jarg3);
  public final static native void Field_insertMFString(long jarg1, Field jarg1_, int jarg2, String jarg3);
  public final static native void Field_removeMF(long jarg1, Field jarg1_, int jarg2);
  public final static native void Field_removeSF(long jarg1, Field jarg1_);
  public final static native void Field_importMFNode(long jarg1, Field jarg1_, int jarg2, String jarg3);
  public final static native void Field_importMFNodeFromString(long jarg1, Field jarg1_, int jarg2, String jarg3);
  public final static native void Field_importSFNode(long jarg1, Field jarg1_, String jarg2);
  public final static native void Field_importSFNodeFromString(long jarg1, Field jarg1_, String jarg2);
  public final static native void Field_removeMFNode(long jarg1, Field jarg1_, int jarg2);
  public final static native long new_GPS(String jarg1);
  public final static native void delete_GPS(long jarg1);
  public final static native void GPS_enable(long jarg1, GPS jarg1_, int jarg2);
  public final static native void GPS_disable(long jarg1, GPS jarg1_);
  public final static native int GPS_getSamplingPeriod(long jarg1, GPS jarg1_);
  public final static native double[] GPS_getValues(long jarg1, GPS jarg1_);
  public final static native double GPS_getSpeed(long jarg1, GPS jarg1_);
  public final static native double[] GPS_getSpeedVector(long jarg1, GPS jarg1_);
  public final static native int GPS_getCoordinateSystem(long jarg1, GPS jarg1_);
  public final static native String GPS_convertToDegreesMinutesSeconds(double jarg1);
  public final static native long new_Gyro(String jarg1);
  public final static native void delete_Gyro(long jarg1);
  public final static native void Gyro_enable(long jarg1, Gyro jarg1_, int jarg2);
  public final static native void Gyro_disable(long jarg1, Gyro jarg1_);
  public final static native int Gyro_getSamplingPeriod(long jarg1, Gyro jarg1_);
  public final static native double[] Gyro_getValues(long jarg1, Gyro jarg1_);
  public final static native int Gyro_getLookupTableSize(long jarg1, Gyro jarg1_);
  public final static native double[] Gyro_getLookupTable(long jarg1, Gyro jarg1_);
  public final static native long new_InertialUnit(String jarg1);
  public final static native void delete_InertialUnit(long jarg1);
  public final static native void InertialUnit_enable(long jarg1, InertialUnit jarg1_, int jarg2);
  public final static native void InertialUnit_disable(long jarg1, InertialUnit jarg1_);
  public final static native int InertialUnit_getSamplingPeriod(long jarg1, InertialUnit jarg1_);
  public final static native double[] InertialUnit_getRollPitchYaw(long jarg1, InertialUnit jarg1_);
  public final static native double[] InertialUnit_getQuaternion(long jarg1, InertialUnit jarg1_);
  public final static native double InertialUnit_getNoise(long jarg1, InertialUnit jarg1_);
  public final static native long new_Joystick();
  public final static native void delete_Joystick(long jarg1);
  public final static native void Joystick_enable(long jarg1, Joystick jarg1_, int jarg2);
  public final static native void Joystick_disable(long jarg1, Joystick jarg1_);
  public final static native int Joystick_getSamplingPeriod(long jarg1, Joystick jarg1_);
  public final static native boolean Joystick_isConnected(long jarg1, Joystick jarg1_);
  public final static native String Joystick_getModel(long jarg1, Joystick jarg1_);
  public final static native int Joystick_getNumberOfAxes(long jarg1, Joystick jarg1_);
  public final static native int Joystick_getAxisValue(long jarg1, Joystick jarg1_, int jarg2);
  public final static native int Joystick_getNumberOfPovs(long jarg1, Joystick jarg1_);
  public final static native int Joystick_getPovValue(long jarg1, Joystick jarg1_, int jarg2);
  public final static native int Joystick_getPressedButton(long jarg1, Joystick jarg1_);
  public final static native void Joystick_setConstantForce(long jarg1, Joystick jarg1_, int jarg2);
  public final static native void Joystick_setConstantForceDuration(long jarg1, Joystick jarg1_, double jarg2);
  public final static native void Joystick_setAutoCenteringGain(long jarg1, Joystick jarg1_, double jarg2);
  public final static native void Joystick_setResistanceGain(long jarg1, Joystick jarg1_, double jarg2);
  public final static native void Joystick_setForceAxis(long jarg1, Joystick jarg1_, int jarg2);
  public final static native long new_Keyboard();
  public final static native void delete_Keyboard(long jarg1);
  public final static native void Keyboard_enable(long jarg1, Keyboard jarg1_, int jarg2);
  public final static native void Keyboard_disable(long jarg1, Keyboard jarg1_);
  public final static native int Keyboard_getSamplingPeriod(long jarg1, Keyboard jarg1_);
  public final static native int Keyboard_getKey(long jarg1, Keyboard jarg1_);
  public final static native long new_LED(String jarg1);
  public final static native void delete_LED(long jarg1);
  public final static native void LED_set(long jarg1, LED jarg1_, int jarg2);
  public final static native int LED_get(long jarg1, LED jarg1_);
  public final static native void LidarPoint_x_set(long jarg1, LidarPoint jarg1_, float jarg2);
  public final static native float LidarPoint_x_get(long jarg1, LidarPoint jarg1_);
  public final static native void LidarPoint_y_set(long jarg1, LidarPoint jarg1_, float jarg2);
  public final static native float LidarPoint_y_get(long jarg1, LidarPoint jarg1_);
  public final static native void LidarPoint_z_set(long jarg1, LidarPoint jarg1_, float jarg2);
  public final static native float LidarPoint_z_get(long jarg1, LidarPoint jarg1_);
  public final static native void LidarPoint_layer_id_set(long jarg1, LidarPoint jarg1_, int jarg2);
  public final static native int LidarPoint_layer_id_get(long jarg1, LidarPoint jarg1_);
  public final static native void LidarPoint_time_set(long jarg1, LidarPoint jarg1_, float jarg2);
  public final static native float LidarPoint_time_get(long jarg1, LidarPoint jarg1_);
  public final static native double LidarPoint_getLayerId(long jarg1, LidarPoint jarg1_);
  public final static native long new_LidarPoint();
  public final static native void delete_LidarPoint(long jarg1);
  public final static native long new_Lidar(String jarg1);
  public final static native void delete_Lidar(long jarg1);
  public final static native void Lidar_enable(long jarg1, Lidar jarg1_, int jarg2);
  public final static native void Lidar_enablePointCloud(long jarg1, Lidar jarg1_);
  public final static native void Lidar_disable(long jarg1, Lidar jarg1_);
  public final static native void Lidar_disablePointCloud(long jarg1, Lidar jarg1_);
  public final static native int Lidar_getSamplingPeriod(long jarg1, Lidar jarg1_);
  public final static native boolean Lidar_isPointCloudEnabled(long jarg1, Lidar jarg1_);
  public final static native float[] Lidar_getRangeImage(long jarg1, Lidar jarg1_);
  public final static native float[] Lidar_getLayerRangeImage(long jarg1, Lidar jarg1_, int jarg2);
  public final static native long Lidar_getPointCloudPrivate(long jarg1, Lidar jarg1_);
  public final static native long Lidar_getLayerPointCloudPrivate(long jarg1, Lidar jarg1_, int jarg2);
  public final static native int Lidar_getNumberOfPoints(long jarg1, Lidar jarg1_);
  public final static native int Lidar_getHorizontalResolution(long jarg1, Lidar jarg1_);
  public final static native int Lidar_getNumberOfLayers(long jarg1, Lidar jarg1_);
  public final static native double Lidar_getMinFrequency(long jarg1, Lidar jarg1_);
  public final static native double Lidar_getMaxFrequency(long jarg1, Lidar jarg1_);
  public final static native double Lidar_getFrequency(long jarg1, Lidar jarg1_);
  public final static native void Lidar_setFrequency(long jarg1, Lidar jarg1_, double jarg2);
  public final static native double Lidar_getFov(long jarg1, Lidar jarg1_);
  public final static native double Lidar_getVerticalFov(long jarg1, Lidar jarg1_);
  public final static native double Lidar_getMinRange(long jarg1, Lidar jarg1_);
  public final static native double Lidar_getMaxRange(long jarg1, Lidar jarg1_);
  public final static native long Lidar_getPoint(long jarg1, Lidar jarg1_, int jarg2);
  public final static native long Lidar_getLayerPoint(long jarg1, Lidar jarg1_, int jarg2, int jarg3);
  public final static native long new_LightSensor(String jarg1);
  public final static native void delete_LightSensor(long jarg1);
  public final static native void LightSensor_enable(long jarg1, LightSensor jarg1_, int jarg2);
  public final static native void LightSensor_disable(long jarg1, LightSensor jarg1_);
  public final static native int LightSensor_getSamplingPeriod(long jarg1, LightSensor jarg1_);
  public final static native double LightSensor_getValue(long jarg1, LightSensor jarg1_);
  public final static native int LightSensor_getLookupTableSize(long jarg1, LightSensor jarg1_);
  public final static native double[] LightSensor_getLookupTable(long jarg1, LightSensor jarg1_);
  public final static native long new_Motion(String jarg1);
  public final static native boolean Motion_isValid(long jarg1, Motion jarg1_);
  public final static native void delete_Motion(long jarg1);
  public final static native void Motion_play(long jarg1, Motion jarg1_);
  public final static native void Motion_stop(long jarg1, Motion jarg1_);
  public final static native int Motion_getDuration(long jarg1, Motion jarg1_);
  public final static native int Motion_getTime(long jarg1, Motion jarg1_);
  public final static native void Motion_setTime(long jarg1, Motion jarg1_, int jarg2);
  public final static native void Motion_setReverse(long jarg1, Motion jarg1_, boolean jarg2);
  public final static native void Motion_setLoop(long jarg1, Motion jarg1_, boolean jarg2);
  public final static native boolean Motion_isOver(long jarg1, Motion jarg1_);
  public final static native long new_Motor(String jarg1);
  public final static native void delete_Motor(long jarg1);
  public final static native void Motor_setPosition(long jarg1, Motor jarg1_, double jarg2);
  public final static native void Motor_setVelocity(long jarg1, Motor jarg1_, double jarg2);
  public final static native void Motor_setAcceleration(long jarg1, Motor jarg1_, double jarg2);
  public final static native void Motor_setAvailableForce(long jarg1, Motor jarg1_, double jarg2);
  public final static native void Motor_setAvailableTorque(long jarg1, Motor jarg1_, double jarg2);
  public final static native void Motor_setControlPID(long jarg1, Motor jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double Motor_getTargetPosition(long jarg1, Motor jarg1_);
  public final static native double Motor_getMinPosition(long jarg1, Motor jarg1_);
  public final static native double Motor_getMaxPosition(long jarg1, Motor jarg1_);
  public final static native double Motor_getVelocity(long jarg1, Motor jarg1_);
  public final static native double Motor_getMaxVelocity(long jarg1, Motor jarg1_);
  public final static native double Motor_getAcceleration(long jarg1, Motor jarg1_);
  public final static native double Motor_getAvailableForce(long jarg1, Motor jarg1_);
  public final static native double Motor_getMaxForce(long jarg1, Motor jarg1_);
  public final static native double Motor_getAvailableTorque(long jarg1, Motor jarg1_);
  public final static native double Motor_getMaxTorque(long jarg1, Motor jarg1_);
  public final static native double Motor_getMultiplier(long jarg1, Motor jarg1_);
  public final static native void Motor_enableForceFeedback(long jarg1, Motor jarg1_, int jarg2);
  public final static native void Motor_disableForceFeedback(long jarg1, Motor jarg1_);
  public final static native int Motor_getForceFeedbackSamplingPeriod(long jarg1, Motor jarg1_);
  public final static native double Motor_getForceFeedback(long jarg1, Motor jarg1_);
  public final static native void Motor_enableTorqueFeedback(long jarg1, Motor jarg1_, int jarg2);
  public final static native void Motor_disableTorqueFeedback(long jarg1, Motor jarg1_);
  public final static native int Motor_getTorqueFeedbackSamplingPeriod(long jarg1, Motor jarg1_);
  public final static native double Motor_getTorqueFeedback(long jarg1, Motor jarg1_);
  public final static native void Motor_setForce(long jarg1, Motor jarg1_, double jarg2);
  public final static native void Motor_setTorque(long jarg1, Motor jarg1_, double jarg2);
  public final static native int Motor_getType(long jarg1, Motor jarg1_);
  public final static native long Motor_getBrakePrivate(long jarg1, Motor jarg1_);
  public final static native long Motor_getPositionSensorPrivate(long jarg1, Motor jarg1_);
  public final static native int Motor_getBrakeTag(long jarg1, Motor jarg1_);
  public final static native int Motor_getPositionSensorTag(long jarg1, Motor jarg1_);
  public final static native void MouseState_left_set(long jarg1, MouseState jarg1_, boolean jarg2);
  public final static native boolean MouseState_left_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_middle_set(long jarg1, MouseState jarg1_, boolean jarg2);
  public final static native boolean MouseState_middle_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_right_set(long jarg1, MouseState jarg1_, boolean jarg2);
  public final static native boolean MouseState_right_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_u_set(long jarg1, MouseState jarg1_, double jarg2);
  public final static native double MouseState_u_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_v_set(long jarg1, MouseState jarg1_, double jarg2);
  public final static native double MouseState_v_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_x_set(long jarg1, MouseState jarg1_, double jarg2);
  public final static native double MouseState_x_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_y_set(long jarg1, MouseState jarg1_, double jarg2);
  public final static native double MouseState_y_get(long jarg1, MouseState jarg1_);
  public final static native void MouseState_z_set(long jarg1, MouseState jarg1_, double jarg2);
  public final static native double MouseState_z_get(long jarg1, MouseState jarg1_);
  public final static native long new_MouseState();
  public final static native void delete_MouseState(long jarg1);
  public final static native long new_Mouse();
  public final static native void delete_Mouse(long jarg1);
  public final static native void Mouse_enable(long jarg1, Mouse jarg1_, int jarg2);
  public final static native void Mouse_disable(long jarg1, Mouse jarg1_);
  public final static native int Mouse_getSamplingPeriod(long jarg1, Mouse jarg1_);
  public final static native void Mouse_enable3dPosition(long jarg1, Mouse jarg1_);
  public final static native void Mouse_disable3dPosition(long jarg1, Mouse jarg1_);
  public final static native boolean Mouse_is3dPositionEnabled(long jarg1, Mouse jarg1_);
  public final static native long Mouse_getState(long jarg1, Mouse jarg1_);
  public final static native void ContactPoint_point_set(long jarg1, ContactPoint jarg1_, double[] jarg2);
  public final static native double[] ContactPoint_point_get(long jarg1, ContactPoint jarg1_);
  public final static native void ContactPoint_node_id_set(long jarg1, ContactPoint jarg1_, int jarg2);
  public final static native int ContactPoint_node_id_get(long jarg1, ContactPoint jarg1_);
  public final static native int ContactPoint_getNodeId(long jarg1, ContactPoint jarg1_);
  public final static native long new_ContactPoint();
  public final static native void delete_ContactPoint(long jarg1);
  public final static native void Node_remove(long jarg1, Node jarg1_);
  public final static native int Node_getId(long jarg1, Node jarg1_);
  public final static native int Node_getType(long jarg1, Node jarg1_);
  public final static native String Node_getDef(long jarg1, Node jarg1_);
  public final static native String Node_getTypeName(long jarg1, Node jarg1_);
  public final static native String Node_getBaseTypeName(long jarg1, Node jarg1_);
  public final static native long Node_getParentNodePrivate(long jarg1, Node jarg1_);
  public final static native boolean Node_isProto(long jarg1, Node jarg1_);
  public final static native long Node_getFromProtoDefPrivate(long jarg1, Node jarg1_, String jarg2);
  public final static native int Node_getNumberOfFields(long jarg1, Node jarg1_);
  public final static native int Node_getProtoNumberOfFields(long jarg1, Node jarg1_);
  public final static native long Node_getFieldPrivate(long jarg1, Node jarg1_, String jarg2);
  public final static native long Node_getProtoField(long jarg1, Node jarg1_, String jarg2);
  public final static native long Node_getFieldByIndex(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_getProtoFieldByIndex(long jarg1, Node jarg1_, int jarg2);
  public final static native double[] Node_getPosition(long jarg1, Node jarg1_);
  public final static native double[] Node_getOrientation(long jarg1, Node jarg1_);
  public final static native double[] Node_getPose__SWIG_0(long jarg1, Node jarg1_);
  public final static native double[] Node_getPose__SWIG_1(long jarg1, Node jarg1_, long jarg2, Node jarg2_);
  public final static native void Node_enableContactPointsTracking__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native void Node_disableContactPointsTracking__SWIG_0(long jarg1, Node jarg1_);
  public final static native void Node_enableContactPointsTracking__SWIG_1(long jarg1, Node jarg1_, int jarg2, boolean jarg3);
  public final static native void Node_disableContactPointsTracking__SWIG_1(long jarg1, Node jarg1_, boolean jarg2);
  public final static native void Node_enablePoseTracking__SWIG_0(long jarg1, Node jarg1_, int jarg2);
  public final static native void Node_disablePoseTracking__SWIG_0(long jarg1, Node jarg1_);
  public final static native void Node_enablePoseTracking__SWIG_1(long jarg1, Node jarg1_, int jarg2, long jarg3, Node jarg3_);
  public final static native void Node_disablePoseTracking__SWIG_1(long jarg1, Node jarg1_, long jarg2, Node jarg2_);
  public final static native long Node_getContactPointsPrivate(long jarg1, Node jarg1_, boolean jarg2, int[] jarg3);
  public final static native double[] Node_getCenterOfMass(long jarg1, Node jarg1_);
  public final static native double[] Node_getContactPoint(long jarg1, Node jarg1_, int jarg2);
  public final static native long Node_getContactPointNode(long jarg1, Node jarg1_, int jarg2);
  public final static native int Node_getNumberOfContactPoints__SWIG_0(long jarg1, Node jarg1_, boolean jarg2);
  public final static native int Node_getNumberOfContactPoints__SWIG_1(long jarg1, Node jarg1_);
  public final static native boolean Node_getStaticBalance(long jarg1, Node jarg1_);
  public final static native double[] Node_getVelocity(long jarg1, Node jarg1_);
  public final static native String Node_exportString(long jarg1, Node jarg1_);
  public final static native void Node_setVelocity(long jarg1, Node jarg1_, double[] jarg2);
  public final static native void Node_resetPhysics(long jarg1, Node jarg1_);
  public final static native void Node_restartController(long jarg1, Node jarg1_);
  public final static native void Node_moveViewpoint(long jarg1, Node jarg1_);
  public final static native void Node_setVisibility(long jarg1, Node jarg1_, long jarg2, Node jarg2_, boolean jarg3);
  public final static native void Node_addForce(long jarg1, Node jarg1_, double[] jarg2, boolean jarg3);
  public final static native void Node_addForceWithOffset(long jarg1, Node jarg1_, double[] jarg2, double[] jarg3, boolean jarg4);
  public final static native void Node_addTorque(long jarg1, Node jarg1_, double[] jarg2, boolean jarg3);
  public final static native void Node_saveState(long jarg1, Node jarg1_, String jarg2);
  public final static native void Node_loadState(long jarg1, Node jarg1_, String jarg2);
  public final static native void Node_setJointPosition__SWIG_0(long jarg1, Node jarg1_, double jarg2, int jarg3);
  public final static native void Node_setJointPosition__SWIG_1(long jarg1, Node jarg1_, double jarg2);
  public final static native long Node_getContactPointFromPointer(long jarg1, Node jarg1_, long jarg2, int jarg3);
  public final static native long new_Pen(String jarg1);
  public final static native void delete_Pen(long jarg1);
  public final static native void Pen_write(long jarg1, Pen jarg1_, boolean jarg2);
  public final static native void Pen_setInkColor(long jarg1, Pen jarg1_, int jarg2, double jarg3);
  public final static native long new_PositionSensor(String jarg1);
  public final static native void delete_PositionSensor(long jarg1);
  public final static native void PositionSensor_enable(long jarg1, PositionSensor jarg1_, int jarg2);
  public final static native void PositionSensor_disable(long jarg1, PositionSensor jarg1_);
  public final static native int PositionSensor_getSamplingPeriod(long jarg1, PositionSensor jarg1_);
  public final static native double PositionSensor_getValue(long jarg1, PositionSensor jarg1_);
  public final static native int PositionSensor_getType(long jarg1, PositionSensor jarg1_);
  public final static native long PositionSensor_getBrakePrivate(long jarg1, PositionSensor jarg1_);
  public final static native long PositionSensor_getMotorPrivate(long jarg1, PositionSensor jarg1_);
  public final static native int PositionSensor_getBrakeTag(long jarg1, PositionSensor jarg1_);
  public final static native int PositionSensor_getMotorTag(long jarg1, PositionSensor jarg1_);
  public final static native void RadarTarget_distance_set(long jarg1, RadarTarget jarg1_, double jarg2);
  public final static native double RadarTarget_distance_get(long jarg1, RadarTarget jarg1_);
  public final static native void RadarTarget_received_power_set(long jarg1, RadarTarget jarg1_, double jarg2);
  public final static native double RadarTarget_received_power_get(long jarg1, RadarTarget jarg1_);
  public final static native void RadarTarget_speed_set(long jarg1, RadarTarget jarg1_, double jarg2);
  public final static native double RadarTarget_speed_get(long jarg1, RadarTarget jarg1_);
  public final static native void RadarTarget_azimuth_set(long jarg1, RadarTarget jarg1_, double jarg2);
  public final static native double RadarTarget_azimuth_get(long jarg1, RadarTarget jarg1_);
  public final static native double RadarTarget_getReceivedPower(long jarg1, RadarTarget jarg1_);
  public final static native long new_RadarTarget();
  public final static native void delete_RadarTarget(long jarg1);
  public final static native long new_Radar(String jarg1);
  public final static native void delete_Radar(long jarg1);
  public final static native void Radar_enable(long jarg1, Radar jarg1_, int jarg2);
  public final static native void Radar_disable(long jarg1, Radar jarg1_);
  public final static native int Radar_getSamplingPeriod(long jarg1, Radar jarg1_);
  public final static native int Radar_getNumberOfTargets(long jarg1, Radar jarg1_);
  public final static native long Radar_getTargetsPrivate(long jarg1, Radar jarg1_);
  public final static native double Radar_getMinRange(long jarg1, Radar jarg1_);
  public final static native double Radar_getMaxRange(long jarg1, Radar jarg1_);
  public final static native double Radar_getHorizontalFov(long jarg1, Radar jarg1_);
  public final static native double Radar_getVerticalFov(long jarg1, Radar jarg1_);
  public final static native long Radar_getTarget(long jarg1, Radar jarg1_, int jarg2);
  public final static native long new_RangeFinder(String jarg1);
  public final static native void delete_RangeFinder(long jarg1);
  public final static native void RangeFinder_enable(long jarg1, RangeFinder jarg1_, int jarg2);
  public final static native void RangeFinder_disable(long jarg1, RangeFinder jarg1_);
  public final static native int RangeFinder_getSamplingPeriod(long jarg1, RangeFinder jarg1_);
  public final static native float[] RangeFinder_getRangeImage(long jarg1, RangeFinder jarg1_);
  public final static native int RangeFinder_getWidth(long jarg1, RangeFinder jarg1_);
  public final static native int RangeFinder_getHeight(long jarg1, RangeFinder jarg1_);
  public final static native double RangeFinder_getFov(long jarg1, RangeFinder jarg1_);
  public final static native double RangeFinder_getMinRange(long jarg1, RangeFinder jarg1_);
  public final static native double RangeFinder_getMaxRange(long jarg1, RangeFinder jarg1_);
  public final static native int RangeFinder_saveImage(long jarg1, RangeFinder jarg1_, String jarg2, int jarg3);
  public final static native float RangeFinder_rangeImageGetDepth(float[] jarg1, int jarg2, int jarg3, int jarg4);
  public final static native long new_Receiver(String jarg1);
  public final static native void delete_Receiver(long jarg1);
  public final static native void Receiver_enable(long jarg1, Receiver jarg1_, int jarg2);
  public final static native void Receiver_disable(long jarg1, Receiver jarg1_);
  public final static native int Receiver_getSamplingPeriod(long jarg1, Receiver jarg1_);
  public final static native void Receiver_setChannel(long jarg1, Receiver jarg1_, int jarg2);
  public final static native int Receiver_getChannel(long jarg1, Receiver jarg1_);
  public final static native int Receiver_getQueueLength(long jarg1, Receiver jarg1_);
  public final static native void Receiver_nextPacket(long jarg1, Receiver jarg1_);
  public final static native int Receiver_getDataSize(long jarg1, Receiver jarg1_);
  public final static native byte[] Receiver_getData(long jarg1, Receiver jarg1_);
  public final static native double Receiver_getSignalStrength(long jarg1, Receiver jarg1_);
  public final static native double[] Receiver_getEmitterDirection(long jarg1, Receiver jarg1_);
  public final static native long new_Skin(String jarg1);
  public final static native void delete_Skin(long jarg1);
  public final static native void Skin_setBoneOrientation(long jarg1, Skin jarg1_, int jarg2, double[] jarg3, boolean jarg4);
  public final static native void Skin_setBonePosition(long jarg1, Skin jarg1_, int jarg2, double[] jarg3, boolean jarg4);
  public final static native int Skin_getBoneCount(long jarg1, Skin jarg1_);
  public final static native String Skin_getBoneName(long jarg1, Skin jarg1_, int jarg2);
  public final static native double[] Skin_getBoneOrientation(long jarg1, Skin jarg1_, int jarg2, boolean jarg3);
  public final static native double[] Skin_getBonePosition(long jarg1, Skin jarg1_, int jarg2, boolean jarg3);
  public final static native long new_Speaker(String jarg1);
  public final static native void delete_Speaker(long jarg1);
  public final static native void Speaker_playSound(long jarg1, Speaker jarg1_, long jarg2, Speaker jarg2_, String jarg3, double jarg4, double jarg5, double jarg6, boolean jarg7);
  public final static native boolean Speaker_isSoundPlaying(long jarg1, Speaker jarg1_, String jarg2);
  public final static native void Speaker_stop(long jarg1, Speaker jarg1_, String jarg2);
  public final static native boolean Speaker_setEngine(long jarg1, Speaker jarg1_, String jarg2);
  public final static native boolean Speaker_setLanguage(long jarg1, Speaker jarg1_, String jarg2);
  public final static native String Speaker_getEngine(long jarg1, Speaker jarg1_);
  public final static native String Speaker_getLanguage(long jarg1, Speaker jarg1_);
  public final static native void Speaker_speak(long jarg1, Speaker jarg1_, String jarg2, double jarg3);
  public final static native boolean Speaker_isSpeaking(long jarg1, Speaker jarg1_);
  public final static native long new_TouchSensor(String jarg1);
  public final static native void delete_TouchSensor(long jarg1);
  public final static native void TouchSensor_enable(long jarg1, TouchSensor jarg1_, int jarg2);
  public final static native void TouchSensor_disable(long jarg1, TouchSensor jarg1_);
  public final static native int TouchSensor_getSamplingPeriod(long jarg1, TouchSensor jarg1_);
  public final static native double TouchSensor_getValue(long jarg1, TouchSensor jarg1_);
  public final static native double[] TouchSensor_getValues(long jarg1, TouchSensor jarg1_);
  public final static native int TouchSensor_getLookupTableSize(long jarg1, TouchSensor jarg1_);
  public final static native double[] TouchSensor_getLookupTable(long jarg1, TouchSensor jarg1_);
  public final static native int TouchSensor_getType(long jarg1, TouchSensor jarg1_);
  public final static native long new_Robot();
  public final static native long Robot_internalGetInstance();
  public final static native void delete_Robot(long jarg1);
  public final static native int Robot_step(long jarg1, Robot jarg1_, int jarg2);
  public final static native int Robot_waitForUserInputEvent(long jarg1, Robot jarg1_, int jarg2, int jarg3);
  public final static native String Robot_getName(long jarg1, Robot jarg1_);
  public final static native String Robot_getUrdf__SWIG_0(long jarg1, Robot jarg1_, String jarg2);
  public final static native String Robot_getUrdf__SWIG_1(long jarg1, Robot jarg1_);
  public final static native double Robot_getTime(long jarg1, Robot jarg1_);
  public final static native String Robot_getModel(long jarg1, Robot jarg1_);
  public final static native String Robot_getCustomData(long jarg1, Robot jarg1_);
  public final static native void Robot_setCustomData(long jarg1, Robot jarg1_, String jarg2);
  public final static native int Robot_getMode(long jarg1, Robot jarg1_);
  public final static native void Robot_setMode(long jarg1, Robot jarg1_, int jarg2, String jarg3);
  public final static native boolean Robot_getSupervisor(long jarg1, Robot jarg1_);
  public final static native boolean Robot_getSynchronization(long jarg1, Robot jarg1_);
  public final static native String Robot_getProjectPath(long jarg1, Robot jarg1_);
  public final static native String Robot_getWorldPath(long jarg1, Robot jarg1_);
  public final static native double Robot_getBasicTimeStep(long jarg1, Robot jarg1_);
  public final static native int Robot_getNumberOfDevices(long jarg1, Robot jarg1_);
  public final static native long Robot_getDeviceByIndexPrivate(long jarg1, Robot jarg1_, int jarg2);
  public final static native long Robot_getDevice(long jarg1, Robot jarg1_, String jarg2);
  public final static native int Robot_getType(long jarg1, Robot jarg1_);
  public final static native void Robot_batterySensorEnable(long jarg1, Robot jarg1_, int jarg2);
  public final static native void Robot_batterySensorDisable(long jarg1, Robot jarg1_);
  public final static native int Robot_batterySensorGetSamplingPeriod(long jarg1, Robot jarg1_);
  public final static native double Robot_batterySensorGetValue(long jarg1, Robot jarg1_);
  public final static native void Robot_wwiSendText(long jarg1, Robot jarg1_, String jarg2);
  public final static native String Robot_wwiReceiveText(long jarg1, Robot jarg1_);
  public final static native String Robot_getData(long jarg1, Robot jarg1_);
  public final static native void Robot_setData(long jarg1, Robot jarg1_, String jarg2);
  public final static native long Robot_getDeviceFromTag(int jarg1);
  public final static native int Robot_getDeviceTypeFromTag(int jarg1);
  public final static native String Robot_getDeviceNameFromTag(int jarg1);
  public final static native int Robot_getDeviceTagFromIndex(int jarg1);
  public final static native int Robot_getDeviceTagFromName(String jarg1);
  public final static native long new_Supervisor();
  public final static native void delete_Supervisor(long jarg1);
  public final static native void Supervisor_simulationQuit(long jarg1, Supervisor jarg1_, int jarg2);
  public final static native void Supervisor_simulationReset(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_simulationResetPhysics(long jarg1, Supervisor jarg1_);
  public final static native int Supervisor_simulationGetMode(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_simulationSetMode(long jarg1, Supervisor jarg1_, int jarg2);
  public final static native void Supervisor_worldLoad(long jarg1, Supervisor jarg1_, String jarg2);
  public final static native void Supervisor_worldReload(long jarg1, Supervisor jarg1_);
  public final static native boolean Supervisor_worldSave__SWIG_0(long jarg1, Supervisor jarg1_);
  public final static native boolean Supervisor_worldSave__SWIG_1(long jarg1, Supervisor jarg1_, String jarg2);
  public final static native void Supervisor_exportImage(long jarg1, Supervisor jarg1_, String jarg2, int jarg3);
  public final static native boolean Supervisor_animationStartRecording(long jarg1, Supervisor jarg1_, String jarg2);
  public final static native boolean Supervisor_animationStopRecording(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_movieStartRecording(long jarg1, Supervisor jarg1_, String jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, boolean jarg8);
  public final static native void Supervisor_movieStopRecording(long jarg1, Supervisor jarg1_);
  public final static native boolean Supervisor_movieIsReady(long jarg1, Supervisor jarg1_);
  public final static native boolean Supervisor_movieFailed(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_setLabel__SWIG_0(long jarg1, Supervisor jarg1_, int jarg2, String jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8, String jarg9);
  public final static native void Supervisor_setLabel__SWIG_1(long jarg1, Supervisor jarg1_, int jarg2, String jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8);
  public final static native long Supervisor_getRootPrivate(long jarg1, Supervisor jarg1_);
  public final static native long Supervisor_getSelfPrivate(long jarg1, Supervisor jarg1_);
  public final static native long Supervisor_getFromDefPrivate(long jarg1, Supervisor jarg1_, String jarg2);
  public final static native long Supervisor_getFromIdPrivate(long jarg1, Supervisor jarg1_, int jarg2);
  public final static native long Supervisor_getFromDevicePrivate(long jarg1, Supervisor jarg1_, long jarg2, Device jarg2_);
  public final static native long Supervisor_getFromDeviceTagPrivate(long jarg1, Supervisor jarg1_, int jarg2);
  public final static native long Supervisor_getSelectedPrivate(long jarg1, Supervisor jarg1_);
  public final static native boolean Supervisor_virtualRealityHeadsetIsUsed(long jarg1, Supervisor jarg1_);
  public final static native double[] Supervisor_virtualRealityHeadsetGetPosition(long jarg1, Supervisor jarg1_);
  public final static native double[] Supervisor_virtualRealityHeadsetGetOrientation(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_simulationRevert(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_loadWorld(long jarg1, Supervisor jarg1_, String jarg2);
  public final static native boolean Supervisor_saveWorld__SWIG_0(long jarg1, Supervisor jarg1_);
  public final static native boolean Supervisor_saveWorld__SWIG_1(long jarg1, Supervisor jarg1_, String jarg2);
  public final static native void Supervisor_simulationPhysicsReset(long jarg1, Supervisor jarg1_);
  public final static native void Supervisor_startMovie(long jarg1, Supervisor jarg1_, String jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, boolean jarg8);
  public final static native void Supervisor_stopMovie(long jarg1, Supervisor jarg1_);
  public final static native int Supervisor_getMovieStatus(long jarg1, Supervisor jarg1_);
  public final static native int Supervisor_movieGetStatus(long jarg1, Supervisor jarg1_);
  public final static native long Accelerometer_SWIGUpcast(long jarg1);
  public final static native long Altimeter_SWIGUpcast(long jarg1);
  public final static native long Brake_SWIGUpcast(long jarg1);
  public final static native long Camera_SWIGUpcast(long jarg1);
  public final static native long Compass_SWIGUpcast(long jarg1);
  public final static native long Connector_SWIGUpcast(long jarg1);
  public final static native long Display_SWIGUpcast(long jarg1);
  public final static native long DistanceSensor_SWIGUpcast(long jarg1);
  public final static native long Emitter_SWIGUpcast(long jarg1);
  public final static native long GPS_SWIGUpcast(long jarg1);
  public final static native long Gyro_SWIGUpcast(long jarg1);
  public final static native long InertialUnit_SWIGUpcast(long jarg1);
  public final static native long LED_SWIGUpcast(long jarg1);
  public final static native long Lidar_SWIGUpcast(long jarg1);
  public final static native long LightSensor_SWIGUpcast(long jarg1);
  public final static native long Motor_SWIGUpcast(long jarg1);
  public final static native long Pen_SWIGUpcast(long jarg1);
  public final static native long PositionSensor_SWIGUpcast(long jarg1);
  public final static native long Radar_SWIGUpcast(long jarg1);
  public final static native long RangeFinder_SWIGUpcast(long jarg1);
  public final static native long Receiver_SWIGUpcast(long jarg1);
  public final static native long Skin_SWIGUpcast(long jarg1);
  public final static native long Speaker_SWIGUpcast(long jarg1);
  public final static native long TouchSensor_SWIGUpcast(long jarg1);
  public final static native long Supervisor_SWIGUpcast(long jarg1);
}
